{"ast":null,"code":"var _jsxFileName = \"/Users/yonatanronen/dev/10k-Map-Markers/server/client/src/components/VehicleComponent.jsx\";\nimport React, { useMemo } from \"react\";\nimport { css } from \"emotion\";\nimport PropTypes from \"prop-types\";\nimport drone from \"../icons/drone.svg\";\nimport tractor from \"../icons/tractor.svg\";\nconst propTypes = {\n  cluster: PropTypes.object,\n  id: PropTypes.string,\n  setIdOfToolTip: PropTypes.func\n};\n\nconst getBackgroundColor = status => {\n  if (status === \"on-mission\") {\n    return \"green\";\n  } else if (status === \"unreachable\") {\n    return \"red\";\n  } else if (status === \"idle\") {\n    return \"orange\";\n  } else return \"red\";\n};\n\nconst VehicleComponent = ({\n  cluster: {\n    id,\n    type,\n    status,\n    geometry\n  },\n  setIdOfToolTip,\n  idOfToolTip\n}) => {\n  const isTractorImg = useMemo(() => type === \"tractor\", [type]);\n  console.log(\"type\", type);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.root,\n    onMouseEnter: () => setIdOfToolTip(id),\n    onMouseLeave: () => setIdOfToolTip(null),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.status({\n      status\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), idOfToolTip === id && /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.toolTip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"ID: \", id), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, \"Type: \", type), /*#__PURE__*/React.createElement(\"span\", {\n    className: styles.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \"Status \", status), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Location: lat:\", geometry.coordinates.lat, \" long:\", geometry.coordinates.lng)), /*#__PURE__*/React.createElement(\"img\", {\n    src: isTractorImg ? tractor : drone,\n    alt: \"car\",\n    width: 30,\n    height: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst styles = {\n  root: css({\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"relative\"\n  }),\n  toolTip: css({\n    position: \"absolute\",\n    top: -50,\n    borderRadius: 8,\n    zIndex: 1,\n    background: \"blue\",\n    color: \"white\",\n    padding: 12,\n    display: \"flex\",\n    flexDirection: \"column\"\n  }),\n  status: ({\n    status\n  }) => css({\n    background: getBackgroundColor(status),\n    height: 12,\n    width: 12,\n    borderRadius: \"50%\"\n  }),\n  text: css({\n    whiteSpace: 'no-wrap'\n  })\n};\nVehicleComponent.propTypes = propTypes;\nexport default VehicleComponent;","map":{"version":3,"sources":["/Users/yonatanronen/dev/10k-Map-Markers/server/client/src/components/VehicleComponent.jsx"],"names":["React","useMemo","css","PropTypes","propTypes","cluster","object","id","string","setIdOfToolTip","func","getBackgroundColor","status","VehicleComponent","type","geometry","idOfToolTip","isTractorImg","console","log","styles","root","toolTip","text","coordinates","lat","lng","tractor","drone","display","flexDirection","alignItems","justifyContent","position","top","borderRadius","zIndex","background","color","padding","height","width","whiteSpace"],"mappings":"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","sourcesContent":["import React, { useMemo } from \"react\";\nimport { css } from \"emotion\";\nimport PropTypes from \"prop-types\";\nimport drone from \"../icons/drone.svg\";\nimport tractor from \"../icons/tractor.svg\";\n\nconst propTypes = {\n  cluster: PropTypes.object,\n  id: PropTypes.string,\n  setIdOfToolTip: PropTypes.func,\n};\n\nconst getBackgroundColor = (status) => {\n  if (status === \"on-mission\") {\n    return \"green\";\n  } else if (status === \"unreachable\") {\n    return \"red\";\n  } else if (status === \"idle\") {\n    return \"orange\";\n  } else return \"red\";\n};\n\nconst VehicleComponent = ({\n  cluster: { id, type, status, geometry },\n  setIdOfToolTip,\n  idOfToolTip,\n}) => {\n  const isTractorImg = useMemo(() => type === \"tractor\", [type]);\n  console.log(\"type\", type);\n  return (\n    <div\n      className={styles.root}\n      onMouseEnter={() => setIdOfToolTip(id)}\n      onMouseLeave={() => setIdOfToolTip(null)}\n    >\n      <div className={styles.status({ status })} />\n      {idOfToolTip === id && (\n        <div className={styles.toolTip}>\n          <span className={styles.text}>ID: {id}</span>\n          <span className={styles.text}>Type: {type}</span>\n          <span className={styles.text}>Status {status}</span>\n          <span>\n            Location: lat:{geometry.coordinates.lat} long:\n            {geometry.coordinates.lng}\n          </span>\n        </div>\n      )}\n      <img\n        src={isTractorImg ? tractor : drone}\n        alt=\"car\"\n        width={30}\n        height={30}\n      />\n    </div>\n  );\n};\n\nconst styles = {\n  root: css({\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    position: \"relative\",\n  }),\n  toolTip: css({\n    position: \"absolute\",\n    top: -50,\n    borderRadius: 8,\n    zIndex: 1,\n    background: \"blue\",\n    color: \"white\",\n    padding: 12,\n    display: \"flex\",\n    flexDirection: \"column\",\n  }),\n  status: ({ status }) =>\n    css({\n      background: getBackgroundColor(status),\n      height: 12,\n      width: 12,\n      borderRadius: \"50%\",\n    }),\n  text: css({\n    whiteSpace: 'no-wrap'\n  })\n};\n\nVehicleComponent.propTypes = propTypes;\n\nexport default VehicleComponent;\n"]},"metadata":{},"sourceType":"module"}