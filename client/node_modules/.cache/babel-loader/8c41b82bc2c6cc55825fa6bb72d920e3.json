{"ast":null,"code":"import React, { useState } from 'react';\nexport const useGetData = () => {\n  const [data, setData] = React.useState([]);\n\n  const getVehicles = async () => {\n    const rawResponse = await fetch(\"/api/vehicles/\", {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const response = await rawResponse.json();\n    setData(response.vehicles);\n  };\n\n  React.useEffect(() => {\n    getVehicles();\n  }, []);\n  return [data, setData];\n};\nexport const useGetUpdatedData = () => {\n  const [data, setData] = React.useState([]);\n  const [showToolTip, setShowToolTip] = useState(false);\n\n  const updateVehicles = async () => {\n    const rawResponse = await fetch(\"/api/vehicles/updateLocation\", {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const response = await rawResponse.json();\n    setData(response.vehicles);\n  };\n\n  React.useEffect(() => {\n    !showToolTip && setTimeout(() => setInterval(() => updateVehicles(), 5000), 3000);\n  }, [showToolTip]);\n  return data;\n};","map":{"version":3,"sources":["/Users/yonatanronen/dev/10k-Map-Markers/server/client/src/hooks/hooks.js"],"names":["React","useState","useGetData","data","setData","getVehicles","rawResponse","fetch","method","mode","headers","Accept","response","json","vehicles","useEffect","useGetUpdatedData","showToolTip","setShowToolTip","updateVehicles","setTimeout","setInterval"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;;AAEA,QAAMI,WAAW,GAAG,YAAY;AAC9B,UAAMC,WAAW,GAAG,MAAMC,KAAK,CAAC,gBAAD,EAAmB;AAChDC,MAAAA,MAAM,EAAE,KADwC;AAEhDC,MAAAA,IAAI,EAAE,SAF0C;AAGhDC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAHuC,KAAnB,CAA/B;AAQA,UAAMC,QAAQ,GAAG,MAAMN,WAAW,CAACO,IAAZ,EAAvB;AACAT,IAAAA,OAAO,CAACQ,QAAQ,CAACE,QAAV,CAAP;AACD,GAXD;;AAYAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpBV,IAAAA,WAAW;AACZ,GAFD,EAEG,EAFH;AAIA,SAAO,CAACF,IAAD,EAAOC,OAAP,CAAP;AACD,CApBM;AAsBP,OAAO,MAAMY,iBAAiB,GAAG,MAAM;AACrC,QAAM,CAACb,IAAD,EAAOC,OAAP,IAAkBJ,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAACgB,WAAD,EAAcC,cAAd,IAAgCjB,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMkB,cAAc,GAAG,YAAY;AACjC,UAAMb,WAAW,GAAG,MAAMC,KAAK,CAAC,8BAAD,EAAiC;AAC9DC,MAAAA,MAAM,EAAE,KADsD;AAE9DC,MAAAA,IAAI,EAAE,SAFwD;AAG9DC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,kBADD;AAEP,wBAAgB;AAFT;AAHqD,KAAjC,CAA/B;AAQA,UAAMC,QAAQ,GAAG,MAAMN,WAAW,CAACO,IAAZ,EAAvB;AACAT,IAAAA,OAAO,CAACQ,QAAQ,CAACE,QAAV,CAAP;AACD,GAXD;;AAYAd,EAAAA,KAAK,CAACe,SAAN,CAAgB,MAAM;AACpB,KAACE,WAAD,IAAgBG,UAAU,CAAC,MAAMC,WAAW,CAAC,MAAMF,cAAc,EAArB,EAAyB,IAAzB,CAAlB,EAAkD,IAAlD,CAA1B;AACD,GAFD,EAEG,CAACF,WAAD,CAFH;AAIA,SAAOd,IAAP;AACD,CArBM","sourcesContent":["import React, { useState } from 'react';\n\nexport const useGetData = () => {\n  const [data, setData] = React.useState([]);\n  \n  const getVehicles = async () => {\n    const rawResponse = await fetch(\"/api/vehicles/\", {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const response = await rawResponse.json();\n    setData(response.vehicles);\n  };\n  React.useEffect(() => {\n    getVehicles();\n  }, []);\n\n  return [data, setData];\n};\n\nexport const useGetUpdatedData = () => {\n  const [data, setData] = React.useState([]);\n  const [showToolTip, setShowToolTip] = useState(false);\n\n  const updateVehicles = async () => {\n    const rawResponse = await fetch(\"/api/vehicles/updateLocation\", {\n      method: \"GET\",\n      mode: \"no-cors\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n    });\n    const response = await rawResponse.json();\n    setData(response.vehicles);\n  };\n  React.useEffect(() => {\n    !showToolTip && setTimeout(() => setInterval(() => updateVehicles(), 5000), 3000);\n  }, [showToolTip]);\n\n  return data;\n};\n"]},"metadata":{},"sourceType":"module"}